/*******************************************************************************
 * SORMAS® - Surveillance Outbreak Response Management & Analysis System
 * Copyright © 2016-2018 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *******************************************************************************/
package de.symeda.sormas.api.user;

import static de.symeda.sormas.api.user.UserRole.*;

import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

public enum UserRight {

	CASE_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EVENT_OFFICER
			),
	CASE_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EVENT_OFFICER
			),
	CASE_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EVENT_OFFICER
			),
	CASE_TRANSFER(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR
			),
	/*
	 * Edit the investigation status - either by setting a respective task to done or by manually changing it in the case
	 */
	CASE_INVESTIGATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR
			),
	/*
	 * Edit the classification and outcome of a case
	 */
	CASE_CLASSIFY(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			LAB_USER
			),
	CASE_CHANGE_DISEASE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR
			),
	CASE_CHANGE_EPID_NUMBER(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			LAB_USER,
			EVENT_OFFICER
			),
	CASE_DELETE(
			ADMIN
			),
	CASE_IMPORT(
			ADMIN
			),
	CASE_EXPORT(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER
			),
	CASE_ARCHIVE(
			ADMIN
			),
	CASE_VIEW_ARCHIVED(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR
			),
	SAMPLE_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER
			),
	SAMPLE_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EXTERNAL_LAB_USER,
			EVENT_OFFICER
			),
	SAMPLE_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	SAMPLE_DELETE(
			ADMIN
			),
	SAMPLE_TRANSFER(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	SAMPLE_EXPORT(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER
			),
	SAMPLE_VIEW_ARCHIVED(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR
			),
	PATHOGEN_TEST_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	PATHOGEN_TEST_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	ADDITIONAL_TEST_VIEW(
			ADMIN,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	ADDITIONAL_TEST_CREATE(
			ADMIN,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	ADDITIONAL_TEST_EDIT(
			ADMIN,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			LAB_USER,
			EXTERNAL_LAB_USER
			),
	CONTACT_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER
			),
	CONTACT_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			EVENT_OFFICER
			),
	CONTACT_ASSIGN(
			ADMIN,
			NATIONAL_USER,
			CONTACT_SUPERVISOR
			),
	CONTACT_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER
			),
	CONTACT_DELETE(
			ADMIN
			),
	CONTACT_CLASSIFY(
			ADMIN,
			NATIONAL_USER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER
			),
	// users that are allowed to convert a contact to a case need to be allowed to create a case
	CONTACT_CONVERT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER
			),
	CONTACT_EXPORT(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER
			),
	CONTACT_VIEW_ARCHIVED(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR
			),
	VISIT_CREATE(
			ADMIN,
			NATIONAL_USER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER
			),
	VISIT_EDIT(
			ADMIN,
			NATIONAL_USER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER
			),
	TASK_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER,
			SURVEILLANCE_OFFICER
			),
	TASK_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EXTERNAL_LAB_USER,
			EVENT_OFFICER
			),
	TASK_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			LAB_USER,
			EXTERNAL_LAB_USER,
			EVENT_OFFICER
			),
	TASK_ASSIGN(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER,
			SURVEILLANCE_OFFICER
			),
	TASK_VIEW_ARCHIVED(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR
			),
	EVENT_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			EVENT_OFFICER
			),
	EVENT_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CASE_OFFICER,
			CONTACT_SUPERVISOR,
			CONTACT_OFFICER,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			EVENT_OFFICER
			),
	EVENT_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			EVENT_OFFICER
			),
	EVENT_EXPORT(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER
			),
	EVENT_ARCHIVE(
			ADMIN
			),
	EVENT_VIEW_ARCHIVED(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR
			),
	EVENTPARTICIPANT_CREATE(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			EVENT_OFFICER
			),
	EVENTPARTICIPANT_EDIT(
			ADMIN,
			NATIONAL_USER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			EVENT_OFFICER
			),
	WEEKLYREPORT_CREATE(
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT,
			SURVEILLANCE_OFFICER
			),
	WEEKLYREPORT_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			SURVEILLANCE_OFFICER,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			HOSPITAL_INFORMANT,
			COMMUNITY_INFORMANT
			),
	USER_CREATE(
			ADMIN
			//			NATIONAL_USER,
			//			SURVEILLANCE_SUPERVISOR,
			//			CASE_SUPERVISOR,
			//			CONTACT_SUPERVISOR,
			//			LAB_USER,
			//			EVENT_OFFICER
			),
	USER_EDIT(
			ADMIN
			//			NATIONAL_USER,
			//			SURVEILLANCE_SUPERVISOR,
			//			CASE_SUPERVISOR,
			//			CONTACT_SUPERVISOR,
			//			LAB_USER,
			//			EVENT_OFFICER
			),
	USER_VIEW(
			ADMIN
			//			NATIONAL_USER,
			//			SURVEILLANCE_SUPERVISOR,
			//			CASE_SUPERVISOR,
			//			CONTACT_SUPERVISOR,
			//			LAB_USER,
			//			EVENT_OFFICER
			),
	CONFIGURATION_ACCESS(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR
			),
	OUTBREAK_CONFIGURE_ALL(
			ADMIN,
			NATIONAL_USER
			),
	OUTBREAK_CONFIGURE_RESTRICTED(
			SURVEILLANCE_SUPERVISOR
			),
	STATISTICS_ACCESS(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER
			),
	STATISTICS_EXPORT(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER
			),
	DATABASE_EXPORT_ACCESS(
			ADMIN,
			NATIONAL_USER
			),
	PERFORM_BULK_OPERATIONS(
			ADMIN
			), 
	INFRASTRUCTURE_CREATE(
			ADMIN
			), 
	INFRASTRUCTURE_EDIT(
			ADMIN
			), 
	INFRASTRUCTURE_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR
			),
	USER_RIGHTS_MANAGE(
			ADMIN
			),
	DASHBOARD_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			CONTACT_SUPERVISOR,
			LAB_USER,
			EVENT_OFFICER
			),
	DASHBOARD_SURVEILLANCE_ACCESS(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			SURVEILLANCE_SUPERVISOR,
			CASE_SUPERVISOR,
			LAB_USER,
			EVENT_OFFICER
			),
	DASHBOARD_CONTACT_ACCESS(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CONTACT_SUPERVISOR
			),
	THERAPY_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR
			),
	PRESCRIPTION_CREATE(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	PRESCRIPTION_EDIT(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	PRESCRIPTION_DELETE(
			ADMIN
			),
	TREATMENT_CREATE(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	TREATMENT_EDIT(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	TREATMENT_DELETE(
			ADMIN
			),
	CLINICAL_COURSE_VIEW(
			ADMIN,
			NATIONAL_USER,
			NATIONAL_OBSERVER,
			STATE_OBSERVER,
			DISTRICT_OBSERVER,
			CASE_SUPERVISOR
			),
	CLINICAL_COURSE_EDIT(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	CLINICAL_VISIT_CREATE(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	CLINICAL_VISIT_EDIT(
			ADMIN,
			NATIONAL_USER,
			CASE_SUPERVISOR
			),
	CLINICAL_VISIT_DELETE(
			ADMIN
			);

	private final Set<UserRole> defaultUserRoles;

	private UserRight(UserRole... defaultUserRoles) {
		this.defaultUserRoles = Collections.unmodifiableSet(new HashSet<UserRole>(Arrays.asList(defaultUserRoles)));
	}

	public boolean isDefaultForRole(UserRole userRole) {
		return defaultUserRoles.contains(userRole);
	}

	public Set<UserRole> getDefaultUserRoles() {
		return defaultUserRoles;
	}
}
